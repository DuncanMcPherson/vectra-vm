name: Release Package
on:
  push:
    branches:
      - master
    tags-ignore:
      - '*'

permissions:
  packages: write
  contents: write
  issues: write

jobs:
  build:
    if: >
      startsWith(github.ref, 'refs/heads/master') &&
      !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    name: Build, Pack, and Release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate Github App Token
        id: get-app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: 1385001
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node
      - name: Cache NuGet
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{runner.os}}-nuget-${{hashFiles('**/*.csproj')}}
          restore-keys: |
            ${{runner.os}}-nuget-
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
      - name: Setup .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x
      - name: Install semantic-release
        run: |
          npm install --save-dev \
            semantic-release \
            @semantic-release/commit-analyzer \
            @semantic-release/release-notes-generator \
            @semantic-release/changelog \
            @semantic-release/exec \
            @semantic-release/git \
            @semantic-release/github
      - name: Set remote with app token
        run: |
          git config --global user.name "release-bot[app]"
          git config --global user.email "release-bot[app]@users.noreply.github.com"
          git remote set-url origin "https://x-access-token:${{ steps.get-app-token.outputs.token }}@github.com/${{ github.repository }}.git"
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{steps.get-app-token.outputs.token}}
        run: npx semantic-release
      - name: Authenticate to GitHub Packages
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/${{github.repository_owner}}/index.json" \
                    --name "dmcphgh" \
                    --username "${{ github.repository_owner }}" \
                    --password "${{secrets.DEPLOY_KEY}}" \
                    --store-password-in-clear-text
      - name: Restore and Build
        run: |
          dotnet restore
          dotnet build Vectra.VM.sln --configuration Release --no-restore
      - name: Pack
        run: dotnet pack --configuration Release --output ./npkg
      - name: Publish Vectra.AST to GitHub Packages
        run: |
          for pkg in ./npkg/*.nupkg; do
            dotnet nuget push "$pkg" \
              --source "dmcphgh" \
              --api-key "${{secrets.DEPLOY_KEY}}" \
              --skip-duplicate
          done
        